// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dct_1d_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        src_0_address0,
        src_0_ce0,
        src_0_q0,
        src_0_address1,
        src_0_ce1,
        src_0_q1,
        src_1_address0,
        src_1_ce0,
        src_1_q0,
        src_1_address1,
        src_1_ce1,
        src_1_q1,
        src_2_address0,
        src_2_ce0,
        src_2_q0,
        src_2_address1,
        src_2_ce1,
        src_2_q1,
        src_3_address0,
        src_3_ce0,
        src_3_q0,
        src_3_address1,
        src_3_ce1,
        src_3_q1,
        src_4_address0,
        src_4_ce0,
        src_4_q0,
        src_4_address1,
        src_4_ce1,
        src_4_q1,
        src_5_address0,
        src_5_ce0,
        src_5_q0,
        src_5_address1,
        src_5_ce1,
        src_5_q1,
        src_6_address0,
        src_6_ce0,
        src_6_q0,
        src_6_address1,
        src_6_ce1,
        src_6_q1,
        src_7_address0,
        src_7_ce0,
        src_7_q0,
        src_7_address1,
        src_7_ce1,
        src_7_q1,
        i_2_i,
        dst_address0,
        dst_ce0,
        dst_we0,
        dst_d0,
        i_2_i1
);

parameter    ap_ST_fsm_state1 = 6'b1;
parameter    ap_ST_fsm_pp0_stage0 = 6'b10;
parameter    ap_ST_fsm_pp0_stage1 = 6'b100;
parameter    ap_ST_fsm_pp0_stage2 = 6'b1000;
parameter    ap_ST_fsm_pp0_stage3 = 6'b10000;
parameter    ap_ST_fsm_state9 = 6'b100000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv4_8 = 4'b1000;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv29_1000 = 29'b1000000000000;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] src_0_address0;
output   src_0_ce0;
input  [15:0] src_0_q0;
output  [2:0] src_0_address1;
output   src_0_ce1;
input  [15:0] src_0_q1;
output  [2:0] src_1_address0;
output   src_1_ce0;
input  [15:0] src_1_q0;
output  [2:0] src_1_address1;
output   src_1_ce1;
input  [15:0] src_1_q1;
output  [2:0] src_2_address0;
output   src_2_ce0;
input  [15:0] src_2_q0;
output  [2:0] src_2_address1;
output   src_2_ce1;
input  [15:0] src_2_q1;
output  [2:0] src_3_address0;
output   src_3_ce0;
input  [15:0] src_3_q0;
output  [2:0] src_3_address1;
output   src_3_ce1;
input  [15:0] src_3_q1;
output  [2:0] src_4_address0;
output   src_4_ce0;
input  [15:0] src_4_q0;
output  [2:0] src_4_address1;
output   src_4_ce1;
input  [15:0] src_4_q1;
output  [2:0] src_5_address0;
output   src_5_ce0;
input  [15:0] src_5_q0;
output  [2:0] src_5_address1;
output   src_5_ce1;
input  [15:0] src_5_q1;
output  [2:0] src_6_address0;
output   src_6_ce0;
input  [15:0] src_6_q0;
output  [2:0] src_6_address1;
output   src_6_ce1;
input  [15:0] src_6_q1;
output  [2:0] src_7_address0;
output   src_7_ce0;
input  [15:0] src_7_q0;
output  [2:0] src_7_address1;
output   src_7_ce1;
input  [15:0] src_7_q1;
input  [3:0] i_2_i;
output  [5:0] dst_address0;
output   dst_ce0;
output   dst_we0;
output  [15:0] dst_d0;
input  [3:0] i_2_i1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[2:0] src_0_address0;
reg src_0_ce0;
reg[2:0] src_0_address1;
reg src_0_ce1;
reg[2:0] src_1_address0;
reg src_1_ce0;
reg[2:0] src_1_address1;
reg src_1_ce1;
reg[2:0] src_2_address0;
reg src_2_ce0;
reg[2:0] src_2_address1;
reg src_2_ce1;
reg[2:0] src_3_address0;
reg src_3_ce0;
reg[2:0] src_3_address1;
reg src_3_ce1;
reg[2:0] src_4_address0;
reg src_4_ce0;
reg[2:0] src_4_address1;
reg src_4_ce1;
reg[2:0] src_5_address0;
reg src_5_ce0;
reg[2:0] src_5_address1;
reg src_5_ce1;
reg[2:0] src_6_address0;
reg src_6_ce0;
reg[2:0] src_6_address1;
reg src_6_ce1;
reg[2:0] src_7_address0;
reg src_7_ce0;
reg[2:0] src_7_address1;
reg src_7_ce1;
reg dst_ce0;
reg dst_we0;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
wire   [2:0] dct_coeff_table_14_address0;
reg    dct_coeff_table_14_ce0;
wire   [13:0] dct_coeff_table_14_q0;
wire   [2:0] dct_coeff_table_13_address0;
reg    dct_coeff_table_13_ce0;
wire   [14:0] dct_coeff_table_13_q0;
wire   [2:0] dct_coeff_table_12_address0;
reg    dct_coeff_table_12_ce0;
wire   [14:0] dct_coeff_table_12_q0;
wire   [2:0] dct_coeff_table_11_address0;
reg    dct_coeff_table_11_ce0;
wire   [14:0] dct_coeff_table_11_q0;
wire   [2:0] dct_coeff_table_10_address0;
reg    dct_coeff_table_10_ce0;
wire   [14:0] dct_coeff_table_10_q0;
wire   [2:0] dct_coeff_table_9_address0;
reg    dct_coeff_table_9_ce0;
wire   [14:0] dct_coeff_table_9_q0;
wire   [2:0] dct_coeff_table_8_address0;
reg    dct_coeff_table_8_ce0;
wire   [14:0] dct_coeff_table_8_q0;
wire   [2:0] dct_coeff_table_address0;
reg    dct_coeff_table_ce0;
wire   [14:0] dct_coeff_table_q0;
reg   [3:0] k_reg_782;
wire   [15:0] grp_fu_793_p10;
reg  signed [15:0] reg_835;
wire   [0:0] ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
reg   [0:0] tmp_reg_1357;
wire   [0:0] ap_CS_fsm_pp0_stage2;
wire   [0:0] ap_CS_fsm_pp0_stage3;
wire   [0:0] ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire   [15:0] grp_fu_814_p10;
reg  signed [15:0] reg_839;
wire   [7:0] tmp_14_cast_fu_851_p1;
reg   [7:0] tmp_14_cast_reg_1026;
wire   [2:0] tmp_13_fu_855_p1;
reg   [2:0] tmp_13_reg_1031;
wire   [0:0] tmp_fu_859_p2;
reg   [0:0] ap_pipeline_reg_pp0_iter1_tmp_reg_1357;
wire   [3:0] k_1_fu_865_p2;
reg   [3:0] k_1_reg_1361;
wire   [31:0] k_cast1_fu_871_p1;
reg   [31:0] k_cast1_reg_1366;
wire   [7:0] tmp_14_fu_881_p2;
reg   [7:0] tmp_14_reg_1376;
reg   [7:0] ap_pipeline_reg_pp0_iter1_tmp_14_reg_1376;
reg  signed [14:0] dct_coeff_table_13_l_reg_1396;
reg  signed [14:0] dct_coeff_table_11_l_reg_1401;
reg   [13:0] dct_coeff_table_14_l_reg_1411;
wire  signed [28:0] tmp_3_1_fu_970_p2;
reg  signed [28:0] tmp_3_1_reg_1416;
wire  signed [28:0] tmp_3_3_fu_976_p2;
reg  signed [28:0] tmp_3_3_reg_1426;
reg  signed [14:0] dct_coeff_table_9_lo_reg_1436;
reg  signed [14:0] dct_coeff_table_12_l_reg_1451;
reg  signed [14:0] dct_coeff_table_10_l_reg_1456;
wire  signed [28:0] tmp_3_5_fu_989_p2;
reg  signed [28:0] tmp_3_5_reg_1461;
reg  signed [14:0] dct_coeff_table_8_lo_reg_1466;
reg  signed [14:0] dct_coeff_table_load_reg_1471;
wire  signed [28:0] grp_fu_982_p3;
reg  signed [28:0] tmp2_reg_1476;
(* use_dsp48 = "no" *) wire   [28:0] tmp1_fu_928_p2;
reg   [28:0] tmp1_reg_1481;
wire  signed [28:0] grp_fu_1003_p3;
reg  signed [28:0] tmp5_reg_1486;
wire  signed [28:0] grp_fu_1010_p3;
reg  signed [28:0] tmp6_reg_1491;
reg   [3:0] k_phi_fu_786_p4;
wire   [31:0] tmp_15_cast_fu_946_p1;
wire   [6:0] tmp_12_fu_843_p3;
wire   [7:0] k_cast1_cast_fu_877_p1;
wire  signed [28:0] grp_fu_995_p3;
(* use_dsp48 = "no" *) wire   [28:0] tmp4_fu_950_p2;
wire   [28:0] tmp_9_fu_954_p2;
wire   [13:0] grp_fu_982_p0;
wire  signed [28:0] grp_fu_1017_p3;
wire   [13:0] grp_fu_1017_p2;
wire   [0:0] ap_CS_fsm_state9;
reg   [5:0] ap_NS_fsm;
wire   [28:0] grp_fu_982_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'b1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

dct_1d_1_dct_coefbkb #(
    .DataWidth( 14 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dct_coeff_table_14_address0),
    .ce0(dct_coeff_table_14_ce0),
    .q0(dct_coeff_table_14_q0)
);

dct_1d_1_dct_coefcud #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dct_coeff_table_13_address0),
    .ce0(dct_coeff_table_13_ce0),
    .q0(dct_coeff_table_13_q0)
);

dct_1d_1_dct_coefdEe #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dct_coeff_table_12_address0),
    .ce0(dct_coeff_table_12_ce0),
    .q0(dct_coeff_table_12_q0)
);

dct_1d_1_dct_coefeOg #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dct_coeff_table_11_address0),
    .ce0(dct_coeff_table_11_ce0),
    .q0(dct_coeff_table_11_q0)
);

dct_1d_1_dct_coeffYi #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dct_coeff_table_10_address0),
    .ce0(dct_coeff_table_10_ce0),
    .q0(dct_coeff_table_10_q0)
);

dct_1d_1_dct_coefg8j #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dct_coeff_table_9_address0),
    .ce0(dct_coeff_table_9_ce0),
    .q0(dct_coeff_table_9_q0)
);

dct_1d_1_dct_coefhbi #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dct_coeff_table_8_address0),
    .ce0(dct_coeff_table_8_ce0),
    .q0(dct_coeff_table_8_q0)
);

dct_1d_1_dct_coefibs #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dct_coeff_table_address0),
    .ce0(dct_coeff_table_ce0),
    .q0(dct_coeff_table_q0)
);

dct_mux_83_16_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
dct_mux_83_16_1_U9(
    .din1(src_0_q0),
    .din2(src_1_q0),
    .din3(src_2_q0),
    .din4(src_3_q0),
    .din5(src_4_q0),
    .din6(src_5_q0),
    .din7(src_6_q0),
    .din8(src_7_q0),
    .din9(tmp_13_reg_1031),
    .dout(grp_fu_793_p10)
);

dct_mux_83_16_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
dct_mux_83_16_1_U10(
    .din1(src_0_q1),
    .din2(src_1_q1),
    .din3(src_2_q1),
    .din4(src_3_q1),
    .din5(src_4_q1),
    .din6(src_5_q1),
    .din7(src_6_q1),
    .din8(src_7_q1),
    .din9(tmp_13_reg_1031),
    .dout(grp_fu_814_p10)
);

dct_mul_mul_15s_1jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
dct_mul_mul_15s_1jbC_U11(
    .din0(dct_coeff_table_13_l_reg_1396),
    .din1(reg_835),
    .dout(tmp_3_1_fu_970_p2)
);

dct_mul_mul_15s_1jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
dct_mul_mul_15s_1jbC_U12(
    .din0(dct_coeff_table_11_l_reg_1401),
    .din1(reg_839),
    .dout(tmp_3_3_fu_976_p2)
);

dct_mac_muladd_14kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_14kbM_U13(
    .din0(grp_fu_982_p0),
    .din1(reg_835),
    .din2(tmp_3_1_reg_1416),
    .dout(grp_fu_982_p3)
);

dct_mul_mul_15s_1jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
dct_mul_mul_15s_1jbC_U14(
    .din0(dct_coeff_table_9_lo_reg_1436),
    .din1(reg_839),
    .dout(tmp_3_5_fu_989_p2)
);

dct_mac_muladd_15lbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_15lbW_U15(
    .din0(dct_coeff_table_12_l_reg_1451),
    .din1(reg_835),
    .din2(tmp_3_3_reg_1426),
    .dout(grp_fu_995_p3)
);

dct_mac_muladd_15lbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_15lbW_U16(
    .din0(dct_coeff_table_10_l_reg_1456),
    .din1(reg_839),
    .din2(tmp_3_5_reg_1461),
    .dout(grp_fu_1003_p3)
);

dct_mac_muladd_15lbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_15lbW_U17(
    .din0(dct_coeff_table_8_lo_reg_1466),
    .din1(reg_835),
    .din2(grp_fu_1017_p3),
    .dout(grp_fu_1010_p3)
);

dct_mac_muladd_15mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_15mb6_U18(
    .din0(dct_coeff_table_load_reg_1471),
    .din1(reg_839),
    .din2(grp_fu_1017_p2),
    .dout(grp_fu_1017_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(1'b0 == tmp_fu_859_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((tmp_reg_1357 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end else if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & ~(tmp_reg_1357 == 1'b0)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_1357 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        k_reg_782 <= k_1_reg_1361;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        k_reg_782 <= ap_const_lv4_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_pipeline_reg_pp0_iter1_tmp_14_reg_1376 <= tmp_14_reg_1376;
        ap_pipeline_reg_pp0_iter1_tmp_reg_1357 <= tmp_reg_1357;
        tmp_reg_1357 <= tmp_fu_859_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_1357 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        dct_coeff_table_10_l_reg_1456 <= dct_coeff_table_10_q0;
        dct_coeff_table_12_l_reg_1451 <= dct_coeff_table_12_q0;
        dct_coeff_table_8_lo_reg_1466 <= dct_coeff_table_8_q0;
        dct_coeff_table_load_reg_1471 <= dct_coeff_table_q0;
        tmp_3_5_reg_1461 <= tmp_3_5_fu_989_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1357 == 1'b0))) begin
        dct_coeff_table_11_l_reg_1401 <= dct_coeff_table_11_q0;
        dct_coeff_table_13_l_reg_1396 <= dct_coeff_table_13_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_1357 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        dct_coeff_table_14_l_reg_1411 <= dct_coeff_table_14_q0;
        dct_coeff_table_9_lo_reg_1436 <= dct_coeff_table_9_q0;
        tmp_3_1_reg_1416 <= tmp_3_1_fu_970_p2;
        tmp_3_3_reg_1426 <= tmp_3_3_fu_976_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k_1_reg_1361 <= k_1_fu_865_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == tmp_fu_859_p2))) begin
        k_cast1_reg_1366[3 : 0] <= k_cast1_fu_871_p1[3 : 0];
        tmp_14_reg_1376 <= tmp_14_fu_881_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (tmp_reg_1357 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (tmp_reg_1357 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (tmp_reg_1357 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((tmp_reg_1357 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1)))) begin
        reg_835 <= grp_fu_793_p10;
        reg_839 <= grp_fu_814_p10;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_1357 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp1_reg_1481 <= tmp1_fu_928_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (tmp_reg_1357 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp2_reg_1476 <= grp_fu_982_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_1357 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        tmp5_reg_1486 <= grp_fu_1003_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_tmp_reg_1357))) begin
        tmp6_reg_1491 <= grp_fu_1010_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        tmp_13_reg_1031 <= tmp_13_fu_855_p1;
        tmp_14_cast_reg_1026[6 : 3] <= tmp_14_cast_fu_851_p1[6 : 3];
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1)) | (1'b1 == ap_CS_fsm_state9))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        dct_coeff_table_10_ce0 = 1'b1;
    end else begin
        dct_coeff_table_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dct_coeff_table_11_ce0 = 1'b1;
    end else begin
        dct_coeff_table_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        dct_coeff_table_12_ce0 = 1'b1;
    end else begin
        dct_coeff_table_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dct_coeff_table_13_ce0 = 1'b1;
    end else begin
        dct_coeff_table_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        dct_coeff_table_14_ce0 = 1'b1;
    end else begin
        dct_coeff_table_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        dct_coeff_table_8_ce0 = 1'b1;
    end else begin
        dct_coeff_table_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        dct_coeff_table_9_ce0 = 1'b1;
    end else begin
        dct_coeff_table_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        dct_coeff_table_ce0 = 1'b1;
    end else begin
        dct_coeff_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        dst_ce0 = 1'b1;
    end else begin
        dst_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_tmp_reg_1357))) begin
        dst_we0 = 1'b1;
    end else begin
        dst_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_1357 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        k_phi_fu_786_p4 = k_1_reg_1361;
    end else begin
        k_phi_fu_786_p4 = k_reg_782;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            src_0_address0 = ap_const_lv32_6;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            src_0_address0 = ap_const_lv32_2;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            src_0_address0 = ap_const_lv32_0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            src_0_address0 = ap_const_lv32_1;
        end else begin
            src_0_address0 = 'bx;
        end
    end else begin
        src_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            src_0_address1 = ap_const_lv32_7;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            src_0_address1 = ap_const_lv32_4;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            src_0_address1 = ap_const_lv32_5;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            src_0_address1 = ap_const_lv32_3;
        end else begin
            src_0_address1 = 'bx;
        end
    end else begin
        src_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        src_0_ce0 = 1'b1;
    end else begin
        src_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        src_0_ce1 = 1'b1;
    end else begin
        src_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            src_1_address0 = ap_const_lv32_6;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            src_1_address0 = ap_const_lv32_2;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            src_1_address0 = ap_const_lv32_0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            src_1_address0 = ap_const_lv32_1;
        end else begin
            src_1_address0 = 'bx;
        end
    end else begin
        src_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            src_1_address1 = ap_const_lv32_7;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            src_1_address1 = ap_const_lv32_4;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            src_1_address1 = ap_const_lv32_5;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            src_1_address1 = ap_const_lv32_3;
        end else begin
            src_1_address1 = 'bx;
        end
    end else begin
        src_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        src_1_ce0 = 1'b1;
    end else begin
        src_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        src_1_ce1 = 1'b1;
    end else begin
        src_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            src_2_address0 = ap_const_lv32_6;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            src_2_address0 = ap_const_lv32_2;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            src_2_address0 = ap_const_lv32_0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            src_2_address0 = ap_const_lv32_1;
        end else begin
            src_2_address0 = 'bx;
        end
    end else begin
        src_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            src_2_address1 = ap_const_lv32_7;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            src_2_address1 = ap_const_lv32_4;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            src_2_address1 = ap_const_lv32_5;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            src_2_address1 = ap_const_lv32_3;
        end else begin
            src_2_address1 = 'bx;
        end
    end else begin
        src_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        src_2_ce0 = 1'b1;
    end else begin
        src_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        src_2_ce1 = 1'b1;
    end else begin
        src_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            src_3_address0 = ap_const_lv32_6;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            src_3_address0 = ap_const_lv32_2;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            src_3_address0 = ap_const_lv32_0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            src_3_address0 = ap_const_lv32_1;
        end else begin
            src_3_address0 = 'bx;
        end
    end else begin
        src_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            src_3_address1 = ap_const_lv32_7;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            src_3_address1 = ap_const_lv32_4;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            src_3_address1 = ap_const_lv32_5;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            src_3_address1 = ap_const_lv32_3;
        end else begin
            src_3_address1 = 'bx;
        end
    end else begin
        src_3_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        src_3_ce0 = 1'b1;
    end else begin
        src_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        src_3_ce1 = 1'b1;
    end else begin
        src_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            src_4_address0 = ap_const_lv32_6;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            src_4_address0 = ap_const_lv32_2;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            src_4_address0 = ap_const_lv32_0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            src_4_address0 = ap_const_lv32_1;
        end else begin
            src_4_address0 = 'bx;
        end
    end else begin
        src_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            src_4_address1 = ap_const_lv32_7;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            src_4_address1 = ap_const_lv32_4;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            src_4_address1 = ap_const_lv32_5;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            src_4_address1 = ap_const_lv32_3;
        end else begin
            src_4_address1 = 'bx;
        end
    end else begin
        src_4_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        src_4_ce0 = 1'b1;
    end else begin
        src_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        src_4_ce1 = 1'b1;
    end else begin
        src_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            src_5_address0 = ap_const_lv32_6;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            src_5_address0 = ap_const_lv32_2;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            src_5_address0 = ap_const_lv32_0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            src_5_address0 = ap_const_lv32_1;
        end else begin
            src_5_address0 = 'bx;
        end
    end else begin
        src_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            src_5_address1 = ap_const_lv32_7;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            src_5_address1 = ap_const_lv32_4;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            src_5_address1 = ap_const_lv32_5;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            src_5_address1 = ap_const_lv32_3;
        end else begin
            src_5_address1 = 'bx;
        end
    end else begin
        src_5_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        src_5_ce0 = 1'b1;
    end else begin
        src_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        src_5_ce1 = 1'b1;
    end else begin
        src_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            src_6_address0 = ap_const_lv32_6;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            src_6_address0 = ap_const_lv32_2;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            src_6_address0 = ap_const_lv32_0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            src_6_address0 = ap_const_lv32_1;
        end else begin
            src_6_address0 = 'bx;
        end
    end else begin
        src_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            src_6_address1 = ap_const_lv32_7;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            src_6_address1 = ap_const_lv32_4;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            src_6_address1 = ap_const_lv32_5;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            src_6_address1 = ap_const_lv32_3;
        end else begin
            src_6_address1 = 'bx;
        end
    end else begin
        src_6_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        src_6_ce0 = 1'b1;
    end else begin
        src_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        src_6_ce1 = 1'b1;
    end else begin
        src_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            src_7_address0 = ap_const_lv32_6;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            src_7_address0 = ap_const_lv32_2;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            src_7_address0 = ap_const_lv32_0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            src_7_address0 = ap_const_lv32_1;
        end else begin
            src_7_address0 = 'bx;
        end
    end else begin
        src_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            src_7_address1 = ap_const_lv32_7;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            src_7_address1 = ap_const_lv32_4;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            src_7_address1 = ap_const_lv32_5;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            src_7_address1 = ap_const_lv32_3;
        end else begin
            src_7_address1 = 'bx;
        end
    end else begin
        src_7_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        src_7_ce0 = 1'b1;
    end else begin
        src_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        src_7_ce1 = 1'b1;
    end else begin
        src_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp0_iter0) & ~(1'b0 == tmp_fu_859_p2) & ~(1'b1 == ap_enable_reg_pp0_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage2;
        end
        ap_ST_fsm_pp0_stage2 : begin
            if (~((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter1) & ~(1'b1 == ap_enable_reg_pp0_iter0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state9 = ap_CS_fsm[ap_const_lv32_5];

assign dct_coeff_table_10_address0 = k_cast1_reg_1366;

assign dct_coeff_table_11_address0 = k_cast1_fu_871_p1;

assign dct_coeff_table_12_address0 = k_cast1_reg_1366;

assign dct_coeff_table_13_address0 = k_cast1_fu_871_p1;

assign dct_coeff_table_14_address0 = k_cast1_reg_1366;

assign dct_coeff_table_8_address0 = k_cast1_reg_1366;

assign dct_coeff_table_9_address0 = k_cast1_reg_1366;

assign dct_coeff_table_address0 = k_cast1_reg_1366;

assign dst_address0 = tmp_15_cast_fu_946_p1;

assign dst_d0 = {{tmp_9_fu_954_p2[ap_const_lv32_1C : ap_const_lv32_D]}};

assign grp_fu_1017_p2 = ap_const_lv29_1000;

assign grp_fu_982_p0 = grp_fu_982_p00;

assign grp_fu_982_p00 = dct_coeff_table_14_l_reg_1411;

assign k_1_fu_865_p2 = (k_phi_fu_786_p4 + ap_const_lv4_1);

assign k_cast1_cast_fu_877_p1 = k_phi_fu_786_p4;

assign k_cast1_fu_871_p1 = k_phi_fu_786_p4;

assign tmp1_fu_928_p2 = ($signed(tmp2_reg_1476) + $signed(grp_fu_995_p3));

assign tmp4_fu_950_p2 = ($signed(tmp5_reg_1486) + $signed(tmp6_reg_1491));

assign tmp_12_fu_843_p3 = {{i_2_i1}, {ap_const_lv3_0}};

assign tmp_13_fu_855_p1 = i_2_i[2:0];

assign tmp_14_cast_fu_851_p1 = tmp_12_fu_843_p3;

assign tmp_14_fu_881_p2 = (tmp_14_cast_reg_1026 + k_cast1_cast_fu_877_p1);

assign tmp_15_cast_fu_946_p1 = ap_pipeline_reg_pp0_iter1_tmp_14_reg_1376;

assign tmp_9_fu_954_p2 = (tmp1_reg_1481 + tmp4_fu_950_p2);

assign tmp_fu_859_p2 = ((k_phi_fu_786_p4 == ap_const_lv4_8) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    tmp_14_cast_reg_1026[2:0] <= 3'b000;
    tmp_14_cast_reg_1026[7] <= 1'b0;
    k_cast1_reg_1366[31:4] <= 28'b0000000000000000000000000000;
end

endmodule //dct_1d_1
