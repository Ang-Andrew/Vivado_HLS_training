// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Loop_Row_DCT_Loop_pr_HH_
#define _Loop_Row_DCT_Loop_pr_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dct_1d_1.h"

namespace ap_rtl {

struct Loop_Row_DCT_Loop_pr : public sc_module {
    // Port declarations 59
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<3> > buf_2d_in_0_address0;
    sc_out< sc_logic > buf_2d_in_0_ce0;
    sc_in< sc_lv<16> > buf_2d_in_0_q0;
    sc_out< sc_lv<3> > buf_2d_in_0_address1;
    sc_out< sc_logic > buf_2d_in_0_ce1;
    sc_in< sc_lv<16> > buf_2d_in_0_q1;
    sc_out< sc_lv<3> > buf_2d_in_1_address0;
    sc_out< sc_logic > buf_2d_in_1_ce0;
    sc_in< sc_lv<16> > buf_2d_in_1_q0;
    sc_out< sc_lv<3> > buf_2d_in_1_address1;
    sc_out< sc_logic > buf_2d_in_1_ce1;
    sc_in< sc_lv<16> > buf_2d_in_1_q1;
    sc_out< sc_lv<3> > buf_2d_in_2_address0;
    sc_out< sc_logic > buf_2d_in_2_ce0;
    sc_in< sc_lv<16> > buf_2d_in_2_q0;
    sc_out< sc_lv<3> > buf_2d_in_2_address1;
    sc_out< sc_logic > buf_2d_in_2_ce1;
    sc_in< sc_lv<16> > buf_2d_in_2_q1;
    sc_out< sc_lv<3> > buf_2d_in_3_address0;
    sc_out< sc_logic > buf_2d_in_3_ce0;
    sc_in< sc_lv<16> > buf_2d_in_3_q0;
    sc_out< sc_lv<3> > buf_2d_in_3_address1;
    sc_out< sc_logic > buf_2d_in_3_ce1;
    sc_in< sc_lv<16> > buf_2d_in_3_q1;
    sc_out< sc_lv<3> > buf_2d_in_4_address0;
    sc_out< sc_logic > buf_2d_in_4_ce0;
    sc_in< sc_lv<16> > buf_2d_in_4_q0;
    sc_out< sc_lv<3> > buf_2d_in_4_address1;
    sc_out< sc_logic > buf_2d_in_4_ce1;
    sc_in< sc_lv<16> > buf_2d_in_4_q1;
    sc_out< sc_lv<3> > buf_2d_in_5_address0;
    sc_out< sc_logic > buf_2d_in_5_ce0;
    sc_in< sc_lv<16> > buf_2d_in_5_q0;
    sc_out< sc_lv<3> > buf_2d_in_5_address1;
    sc_out< sc_logic > buf_2d_in_5_ce1;
    sc_in< sc_lv<16> > buf_2d_in_5_q1;
    sc_out< sc_lv<3> > buf_2d_in_6_address0;
    sc_out< sc_logic > buf_2d_in_6_ce0;
    sc_in< sc_lv<16> > buf_2d_in_6_q0;
    sc_out< sc_lv<3> > buf_2d_in_6_address1;
    sc_out< sc_logic > buf_2d_in_6_ce1;
    sc_in< sc_lv<16> > buf_2d_in_6_q1;
    sc_out< sc_lv<3> > buf_2d_in_7_address0;
    sc_out< sc_logic > buf_2d_in_7_ce0;
    sc_in< sc_lv<16> > buf_2d_in_7_q0;
    sc_out< sc_lv<3> > buf_2d_in_7_address1;
    sc_out< sc_logic > buf_2d_in_7_ce1;
    sc_in< sc_lv<16> > buf_2d_in_7_q1;
    sc_out< sc_lv<6> > row_outbuf_i_address0;
    sc_out< sc_logic > row_outbuf_i_ce0;
    sc_out< sc_logic > row_outbuf_i_we0;
    sc_out< sc_lv<16> > row_outbuf_i_d0;


    // Module declarations
    Loop_Row_DCT_Loop_pr(sc_module_name name);
    SC_HAS_PROCESS(Loop_Row_DCT_Loop_pr);

    ~Loop_Row_DCT_Loop_pr();

    sc_trace_file* mVcdFile;

    dct_1d_1* grp_dct_1d_1_fu_62;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > i_fu_110_p2;
    sc_signal< sc_lv<4> > i_reg_119;
    sc_signal< sc_lv<1> > ap_CS_fsm_state2;
    sc_signal< sc_logic > grp_dct_1d_1_fu_62_ap_start;
    sc_signal< sc_logic > grp_dct_1d_1_fu_62_ap_done;
    sc_signal< sc_logic > grp_dct_1d_1_fu_62_ap_idle;
    sc_signal< sc_logic > grp_dct_1d_1_fu_62_ap_ready;
    sc_signal< sc_lv<3> > grp_dct_1d_1_fu_62_src_0_address0;
    sc_signal< sc_logic > grp_dct_1d_1_fu_62_src_0_ce0;
    sc_signal< sc_lv<3> > grp_dct_1d_1_fu_62_src_0_address1;
    sc_signal< sc_logic > grp_dct_1d_1_fu_62_src_0_ce1;
    sc_signal< sc_lv<3> > grp_dct_1d_1_fu_62_src_1_address0;
    sc_signal< sc_logic > grp_dct_1d_1_fu_62_src_1_ce0;
    sc_signal< sc_lv<3> > grp_dct_1d_1_fu_62_src_1_address1;
    sc_signal< sc_logic > grp_dct_1d_1_fu_62_src_1_ce1;
    sc_signal< sc_lv<3> > grp_dct_1d_1_fu_62_src_2_address0;
    sc_signal< sc_logic > grp_dct_1d_1_fu_62_src_2_ce0;
    sc_signal< sc_lv<3> > grp_dct_1d_1_fu_62_src_2_address1;
    sc_signal< sc_logic > grp_dct_1d_1_fu_62_src_2_ce1;
    sc_signal< sc_lv<3> > grp_dct_1d_1_fu_62_src_3_address0;
    sc_signal< sc_logic > grp_dct_1d_1_fu_62_src_3_ce0;
    sc_signal< sc_lv<3> > grp_dct_1d_1_fu_62_src_3_address1;
    sc_signal< sc_logic > grp_dct_1d_1_fu_62_src_3_ce1;
    sc_signal< sc_lv<3> > grp_dct_1d_1_fu_62_src_4_address0;
    sc_signal< sc_logic > grp_dct_1d_1_fu_62_src_4_ce0;
    sc_signal< sc_lv<3> > grp_dct_1d_1_fu_62_src_4_address1;
    sc_signal< sc_logic > grp_dct_1d_1_fu_62_src_4_ce1;
    sc_signal< sc_lv<3> > grp_dct_1d_1_fu_62_src_5_address0;
    sc_signal< sc_logic > grp_dct_1d_1_fu_62_src_5_ce0;
    sc_signal< sc_lv<3> > grp_dct_1d_1_fu_62_src_5_address1;
    sc_signal< sc_logic > grp_dct_1d_1_fu_62_src_5_ce1;
    sc_signal< sc_lv<3> > grp_dct_1d_1_fu_62_src_6_address0;
    sc_signal< sc_logic > grp_dct_1d_1_fu_62_src_6_ce0;
    sc_signal< sc_lv<3> > grp_dct_1d_1_fu_62_src_6_address1;
    sc_signal< sc_logic > grp_dct_1d_1_fu_62_src_6_ce1;
    sc_signal< sc_lv<3> > grp_dct_1d_1_fu_62_src_7_address0;
    sc_signal< sc_logic > grp_dct_1d_1_fu_62_src_7_ce0;
    sc_signal< sc_lv<3> > grp_dct_1d_1_fu_62_src_7_address1;
    sc_signal< sc_logic > grp_dct_1d_1_fu_62_src_7_ce1;
    sc_signal< sc_lv<6> > grp_dct_1d_1_fu_62_dst_address0;
    sc_signal< sc_logic > grp_dct_1d_1_fu_62_dst_ce0;
    sc_signal< sc_logic > grp_dct_1d_1_fu_62_dst_we0;
    sc_signal< sc_lv<16> > grp_dct_1d_1_fu_62_dst_d0;
    sc_signal< sc_lv<4> > i_0_i_reg_50;
    sc_signal< sc_lv<1> > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_reg_grp_dct_1d_1_fu_62_ap_start;
    sc_signal< sc_lv<1> > tmp_fu_104_p2;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_state2;
    static const sc_lv<3> ap_ST_fsm_state3;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_buf_2d_in_0_address0();
    void thread_buf_2d_in_0_address1();
    void thread_buf_2d_in_0_ce0();
    void thread_buf_2d_in_0_ce1();
    void thread_buf_2d_in_1_address0();
    void thread_buf_2d_in_1_address1();
    void thread_buf_2d_in_1_ce0();
    void thread_buf_2d_in_1_ce1();
    void thread_buf_2d_in_2_address0();
    void thread_buf_2d_in_2_address1();
    void thread_buf_2d_in_2_ce0();
    void thread_buf_2d_in_2_ce1();
    void thread_buf_2d_in_3_address0();
    void thread_buf_2d_in_3_address1();
    void thread_buf_2d_in_3_ce0();
    void thread_buf_2d_in_3_ce1();
    void thread_buf_2d_in_4_address0();
    void thread_buf_2d_in_4_address1();
    void thread_buf_2d_in_4_ce0();
    void thread_buf_2d_in_4_ce1();
    void thread_buf_2d_in_5_address0();
    void thread_buf_2d_in_5_address1();
    void thread_buf_2d_in_5_ce0();
    void thread_buf_2d_in_5_ce1();
    void thread_buf_2d_in_6_address0();
    void thread_buf_2d_in_6_address1();
    void thread_buf_2d_in_6_ce0();
    void thread_buf_2d_in_6_ce1();
    void thread_buf_2d_in_7_address0();
    void thread_buf_2d_in_7_address1();
    void thread_buf_2d_in_7_ce0();
    void thread_buf_2d_in_7_ce1();
    void thread_grp_dct_1d_1_fu_62_ap_start();
    void thread_i_fu_110_p2();
    void thread_row_outbuf_i_address0();
    void thread_row_outbuf_i_ce0();
    void thread_row_outbuf_i_d0();
    void thread_row_outbuf_i_we0();
    void thread_tmp_fu_104_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
