-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.3
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dct_2d is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_block_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    in_block_ce0 : OUT STD_LOGIC;
    in_block_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    out_block_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_block_ce0 : OUT STD_LOGIC;
    out_block_we0 : OUT STD_LOGIC;
    out_block_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of dct_2d is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_129 : STD_LOGIC_VECTOR (6 downto 0);
    signal j_reg_140 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_1_reg_151 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten1_reg_174 : STD_LOGIC_VECTOR (6 downto 0);
    signal j_1_reg_185 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_3_reg_196 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_4_fu_228_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_4_reg_446 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond_flatten_fu_234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_451 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal indvar_flatten_next_fu_240_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal i_1_mid2_fu_258_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_1_mid2_reg_460 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_cast5_mid2_v_fu_266_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_cast5_mid2_v_reg_465 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_6_fu_301_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_9_fu_332_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal i_5_fu_338_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_5_reg_485 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond_flatten1_fu_344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten1_reg_490 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal indvar_flatten_next1_fu_350_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal i_3_mid2_fu_368_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_3_mid2_reg_499 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_1_cast2_mid2_v_fu_376_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_1_cast2_mid2_v_reg_504 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_7_fu_411_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal row_outbuf_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal row_outbuf_ce0 : STD_LOGIC;
    signal row_outbuf_we0 : STD_LOGIC;
    signal row_outbuf_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal col_outbuf_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal col_outbuf_ce0 : STD_LOGIC;
    signal col_outbuf_we0 : STD_LOGIC;
    signal col_outbuf_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal col_inbuf_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal col_inbuf_ce0 : STD_LOGIC;
    signal col_inbuf_we0 : STD_LOGIC;
    signal col_inbuf_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dct_1d2_fu_207_ap_start : STD_LOGIC;
    signal grp_dct_1d2_fu_207_ap_done : STD_LOGIC;
    signal grp_dct_1d2_fu_207_ap_idle : STD_LOGIC;
    signal grp_dct_1d2_fu_207_ap_ready : STD_LOGIC;
    signal grp_dct_1d2_fu_207_src_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_dct_1d2_fu_207_src_ce0 : STD_LOGIC;
    signal grp_dct_1d2_fu_207_src_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dct_1d2_fu_207_i_2 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dct_1d2_fu_207_dst_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_dct_1d2_fu_207_dst_ce0 : STD_LOGIC;
    signal grp_dct_1d2_fu_207_dst_we0 : STD_LOGIC;
    signal grp_dct_1d2_fu_207_dst_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dct_1d2_fu_207_i_21 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_reg_117 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal j_phi_fu_144_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_2_reg_162 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal j_1_phi_fu_189_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_grp_dct_1d2_fu_207_ap_start : STD_LOGIC := '0';
    signal tmp_8_cast_fu_296_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_cast_fu_327_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_cast_fu_406_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_cast_fu_437_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_2_fu_246_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_5_fu_278_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal j_cast5_mid2_cast_fu_274_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_cast_fu_286_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_fu_290_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_fu_307_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_1_cast4_cast_fu_318_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_cast_fu_314_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_fu_321_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_fu_362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_3_fu_356_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_11_fu_388_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal j_1_cast2_mid2_cast_fu_384_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_cast_fu_396_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_400_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_fu_417_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_3_cast1_cast_fu_428_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_cast_fu_424_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_fu_431_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);

    component dct_1d2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        src_ce0 : OUT STD_LOGIC;
        src_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        i_2 : IN STD_LOGIC_VECTOR (3 downto 0);
        dst_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        dst_ce0 : OUT STD_LOGIC;
        dst_we0 : OUT STD_LOGIC;
        dst_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        i_21 : IN STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component dct_2d_row_outbuf IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    row_outbuf_U : component dct_2d_row_outbuf
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => row_outbuf_address0,
        ce0 => row_outbuf_ce0,
        we0 => row_outbuf_we0,
        d0 => grp_dct_1d2_fu_207_dst_d0,
        q0 => row_outbuf_q0);

    col_outbuf_U : component dct_2d_row_outbuf
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => col_outbuf_address0,
        ce0 => col_outbuf_ce0,
        we0 => col_outbuf_we0,
        d0 => grp_dct_1d2_fu_207_dst_d0,
        q0 => col_outbuf_q0);

    col_inbuf_U : component dct_2d_row_outbuf
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => col_inbuf_address0,
        ce0 => col_inbuf_ce0,
        we0 => col_inbuf_we0,
        d0 => row_outbuf_q0,
        q0 => col_inbuf_q0);

    grp_dct_1d2_fu_207 : component dct_1d2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dct_1d2_fu_207_ap_start,
        ap_done => grp_dct_1d2_fu_207_ap_done,
        ap_idle => grp_dct_1d2_fu_207_ap_idle,
        ap_ready => grp_dct_1d2_fu_207_ap_ready,
        src_address0 => grp_dct_1d2_fu_207_src_address0,
        src_ce0 => grp_dct_1d2_fu_207_src_ce0,
        src_q0 => grp_dct_1d2_fu_207_src_q0,
        i_2 => grp_dct_1d2_fu_207_i_2,
        dst_address0 => grp_dct_1d2_fu_207_dst_address0,
        dst_ce0 => grp_dct_1d2_fu_207_dst_ce0,
        dst_we0 => grp_dct_1d2_fu_207_dst_we0,
        dst_d0 => grp_dct_1d2_fu_207_dst_d0,
        i_21 => grp_dct_1d2_fu_207_i_21);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((exitcond_flatten_fu_234_p2 = ap_const_lv1_0)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state2) and not((tmp_fu_222_p2 = ap_const_lv1_0)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_fu_234_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state2) and not((tmp_fu_222_p2 = ap_const_lv1_0))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((exitcond_flatten_fu_234_p2 = ap_const_lv1_0))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not((ap_const_lv1_0 = exitcond_flatten1_fu_344_p2)))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state7) and not((ap_const_lv1_0 = tmp_9_fu_332_p2)))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_lv1_0 = exitcond_flatten1_fu_344_p2))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state7) and not((ap_const_lv1_0 = tmp_9_fu_332_p2))) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not((ap_const_lv1_0 = exitcond_flatten1_fu_344_p2))))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_dct_1d2_fu_207_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_dct_1d2_fu_207_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state2) and (tmp_fu_222_p2 = ap_const_lv1_0)) or ((ap_const_lv1_1 = ap_CS_fsm_state7) and (ap_const_lv1_0 = tmp_9_fu_332_p2)))) then 
                    ap_reg_grp_dct_1d2_fu_207_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_dct_1d2_fu_207_ap_ready)) then 
                    ap_reg_grp_dct_1d2_fu_207_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_1_reg_151_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2) and not((tmp_fu_222_p2 = ap_const_lv1_0)))) then 
                i_1_reg_151 <= ap_const_lv4_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_fu_234_p2 = ap_const_lv1_0))) then 
                i_1_reg_151 <= i_6_fu_301_p2;
            end if; 
        end if;
    end process;

    i_2_reg_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state6))) then 
                i_2_reg_162 <= ap_const_lv4_0;
            elsif ((not((ap_const_logic_0 = grp_dct_1d2_fu_207_ap_done)) and (ap_const_lv1_1 = ap_CS_fsm_state8))) then 
                i_2_reg_162 <= i_5_reg_485;
            end if; 
        end if;
    end process;

    i_3_reg_196_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state7) and not((ap_const_lv1_0 = tmp_9_fu_332_p2)))) then 
                i_3_reg_196 <= ap_const_lv4_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_flatten1_fu_344_p2))) then 
                i_3_reg_196 <= i_7_fu_411_p2;
            end if; 
        end if;
    end process;

    i_reg_117_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state3) and not((ap_const_logic_0 = grp_dct_1d2_fu_207_ap_done)))) then 
                i_reg_117 <= i_4_reg_446;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_117 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    indvar_flatten1_reg_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state7) and not((ap_const_lv1_0 = tmp_9_fu_332_p2)))) then 
                indvar_flatten1_reg_174 <= ap_const_lv7_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_flatten1_fu_344_p2))) then 
                indvar_flatten1_reg_174 <= indvar_flatten_next1_fu_350_p2;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_129_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2) and not((tmp_fu_222_p2 = ap_const_lv1_0)))) then 
                indvar_flatten_reg_129 <= ap_const_lv7_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_fu_234_p2 = ap_const_lv1_0))) then 
                indvar_flatten_reg_129 <= indvar_flatten_next_fu_240_p2;
            end if; 
        end if;
    end process;

    j_1_reg_185_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state7) and not((ap_const_lv1_0 = tmp_9_fu_332_p2)))) then 
                j_1_reg_185 <= ap_const_lv4_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_490))) then 
                j_1_reg_185 <= j_1_cast2_mid2_v_reg_504;
            end if; 
        end if;
    end process;

    j_reg_140_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2) and not((tmp_fu_222_p2 = ap_const_lv1_0)))) then 
                j_reg_140 <= ap_const_lv4_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (exitcond_flatten_reg_451 = ap_const_lv1_0))) then 
                j_reg_140 <= j_cast5_mid2_v_reg_465;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0))) then
                exitcond_flatten1_reg_490 <= exitcond_flatten1_fu_344_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond_flatten_reg_451 <= exitcond_flatten_fu_234_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_fu_234_p2 = ap_const_lv1_0))) then
                i_1_mid2_reg_460 <= i_1_mid2_fu_258_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_lv1_0 = exitcond_flatten1_fu_344_p2))) then
                i_3_mid2_reg_499 <= i_3_mid2_fu_368_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2))) then
                i_4_reg_446 <= i_4_fu_228_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state7))) then
                i_5_reg_485 <= i_5_fu_338_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_flatten1_fu_344_p2))) then
                j_1_cast2_mid2_v_reg_504 <= j_1_cast2_mid2_v_fu_376_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_fu_234_p2 = ap_const_lv1_0))) then
                j_cast5_mid2_v_reg_465 <= j_cast5_mid2_v_fu_266_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, tmp_fu_222_p2, exitcond_flatten_fu_234_p2, ap_enable_reg_pp0_iter0, tmp_9_fu_332_p2, exitcond_flatten1_fu_344_p2, ap_enable_reg_pp1_iter0, grp_dct_1d2_fu_207_ap_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (not((tmp_fu_222_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (not((ap_const_logic_0 = grp_dct_1d2_fu_207_ap_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((exitcond_flatten_fu_234_p2 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (not((ap_const_lv1_0 = tmp_9_fu_332_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                if (not((ap_const_logic_0 = grp_dct_1d2_fu_207_ap_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and not((ap_const_lv1_0 = exitcond_flatten1_fu_344_p2))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state11 <= ap_CS_fsm(8 downto 8);
    ap_CS_fsm_state2 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state6 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_state7 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_state8 <= ap_CS_fsm(6 downto 6);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state11)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1)) or ((ap_const_lv1_1 = ap_CS_fsm_state11)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state11)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state11))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    col_inbuf_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, grp_dct_1d2_fu_207_src_address0, ap_CS_fsm_state8, tmp_10_cast_fu_327_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            col_inbuf_address0 <= tmp_10_cast_fu_327_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            col_inbuf_address0 <= grp_dct_1d2_fu_207_src_address0;
        else 
            col_inbuf_address0 <= "XXXXXX";
        end if; 
    end process;


    col_inbuf_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, grp_dct_1d2_fu_207_src_ce0, ap_CS_fsm_state8)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            col_inbuf_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            col_inbuf_ce0 <= grp_dct_1d2_fu_207_src_ce0;
        else 
            col_inbuf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    col_inbuf_we0_assign_proc : process(exitcond_flatten_reg_451, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (exitcond_flatten_reg_451 = ap_const_lv1_0)))) then 
            col_inbuf_we0 <= ap_const_logic_1;
        else 
            col_inbuf_we0 <= ap_const_logic_0;
        end if; 
    end process;


    col_outbuf_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, grp_dct_1d2_fu_207_dst_address0, ap_CS_fsm_state8, tmp_16_cast_fu_406_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            col_outbuf_address0 <= tmp_16_cast_fu_406_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            col_outbuf_address0 <= grp_dct_1d2_fu_207_dst_address0;
        else 
            col_outbuf_address0 <= "XXXXXX";
        end if; 
    end process;


    col_outbuf_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, grp_dct_1d2_fu_207_dst_ce0, ap_CS_fsm_state8)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            col_outbuf_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            col_outbuf_ce0 <= grp_dct_1d2_fu_207_dst_ce0;
        else 
            col_outbuf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    col_outbuf_we0_assign_proc : process(grp_dct_1d2_fu_207_dst_we0, ap_CS_fsm_state8)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            col_outbuf_we0 <= grp_dct_1d2_fu_207_dst_we0;
        else 
            col_outbuf_we0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_flatten1_fu_344_p2 <= "1" when (indvar_flatten1_reg_174 = ap_const_lv7_40) else "0";
    exitcond_flatten_fu_234_p2 <= "1" when (indvar_flatten_reg_129 = ap_const_lv7_40) else "0";
    grp_dct_1d2_fu_207_ap_start <= ap_reg_grp_dct_1d2_fu_207_ap_start;

    grp_dct_1d2_fu_207_i_2_assign_proc : process(i_reg_117, ap_CS_fsm_state3, i_2_reg_162, ap_CS_fsm_state8)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            grp_dct_1d2_fu_207_i_2 <= i_2_reg_162;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
            grp_dct_1d2_fu_207_i_2 <= i_reg_117;
        else 
            grp_dct_1d2_fu_207_i_2 <= "XXXX";
        end if; 
    end process;


    grp_dct_1d2_fu_207_i_21_assign_proc : process(i_reg_117, ap_CS_fsm_state3, i_2_reg_162, ap_CS_fsm_state8)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            grp_dct_1d2_fu_207_i_21 <= i_2_reg_162;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
            grp_dct_1d2_fu_207_i_21 <= i_reg_117;
        else 
            grp_dct_1d2_fu_207_i_21 <= "XXXX";
        end if; 
    end process;


    grp_dct_1d2_fu_207_src_q0_assign_proc : process(in_block_q0, col_inbuf_q0, ap_CS_fsm_state3, ap_CS_fsm_state8)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            grp_dct_1d2_fu_207_src_q0 <= col_inbuf_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
            grp_dct_1d2_fu_207_src_q0 <= in_block_q0;
        else 
            grp_dct_1d2_fu_207_src_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_1_cast4_cast_fu_318_p1 <= std_logic_vector(resize(unsigned(i_1_mid2_reg_460),8));
    i_1_mid2_fu_258_p3 <= 
        ap_const_lv4_0 when (tmp_s_fu_252_p2(0) = '1') else 
        i_1_reg_151;
    i_3_cast1_cast_fu_428_p1 <= std_logic_vector(resize(unsigned(i_3_mid2_reg_499),8));
    i_3_mid2_fu_368_p3 <= 
        ap_const_lv4_0 when (tmp_4_fu_362_p2(0) = '1') else 
        i_3_reg_196;
    i_4_fu_228_p2 <= std_logic_vector(unsigned(i_reg_117) + unsigned(ap_const_lv4_1));
    i_5_fu_338_p2 <= std_logic_vector(unsigned(i_2_reg_162) + unsigned(ap_const_lv4_1));
    i_6_fu_301_p2 <= std_logic_vector(unsigned(i_1_mid2_fu_258_p3) + unsigned(ap_const_lv4_1));
    i_7_fu_411_p2 <= std_logic_vector(unsigned(i_3_mid2_fu_368_p3) + unsigned(ap_const_lv4_1));
    in_block_address0 <= grp_dct_1d2_fu_207_src_address0;
    in_block_ce0 <= grp_dct_1d2_fu_207_src_ce0;
    indvar_flatten_next1_fu_350_p2 <= std_logic_vector(unsigned(indvar_flatten1_reg_174) + unsigned(ap_const_lv7_1));
    indvar_flatten_next_fu_240_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_129) + unsigned(ap_const_lv7_1));
    j_1_cast2_mid2_cast_fu_384_p1 <= std_logic_vector(resize(unsigned(j_1_cast2_mid2_v_fu_376_p3),8));
    j_1_cast2_mid2_v_fu_376_p3 <= 
        j_3_fu_356_p2 when (tmp_4_fu_362_p2(0) = '1') else 
        j_1_phi_fu_189_p4;

    j_1_phi_fu_189_p4_assign_proc : process(j_1_reg_185, exitcond_flatten1_reg_490, ap_CS_fsm_pp1_stage0, j_1_cast2_mid2_v_reg_504, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_490))) then 
            j_1_phi_fu_189_p4 <= j_1_cast2_mid2_v_reg_504;
        else 
            j_1_phi_fu_189_p4 <= j_1_reg_185;
        end if; 
    end process;

    j_2_fu_246_p2 <= std_logic_vector(unsigned(j_phi_fu_144_p4) + unsigned(ap_const_lv4_1));
    j_3_fu_356_p2 <= std_logic_vector(unsigned(j_1_phi_fu_189_p4) + unsigned(ap_const_lv4_1));
    j_cast5_mid2_cast_fu_274_p1 <= std_logic_vector(resize(unsigned(j_cast5_mid2_v_fu_266_p3),8));
    j_cast5_mid2_v_fu_266_p3 <= 
        j_2_fu_246_p2 when (tmp_s_fu_252_p2(0) = '1') else 
        j_phi_fu_144_p4;

    j_phi_fu_144_p4_assign_proc : process(j_reg_140, exitcond_flatten_reg_451, ap_CS_fsm_pp0_stage0, j_cast5_mid2_v_reg_465, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (exitcond_flatten_reg_451 = ap_const_lv1_0))) then 
            j_phi_fu_144_p4 <= j_cast5_mid2_v_reg_465;
        else 
            j_phi_fu_144_p4 <= j_reg_140;
        end if; 
    end process;

    out_block_address0 <= tmp_13_cast_fu_437_p1(6 - 1 downto 0);

    out_block_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            out_block_ce0 <= ap_const_logic_1;
        else 
            out_block_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_block_d0 <= col_outbuf_q0;

    out_block_we0_assign_proc : process(exitcond_flatten1_reg_490, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_490)))) then 
            out_block_we0 <= ap_const_logic_1;
        else 
            out_block_we0 <= ap_const_logic_0;
        end if; 
    end process;


    row_outbuf_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, grp_dct_1d2_fu_207_dst_address0, ap_CS_fsm_state3, tmp_8_cast_fu_296_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            row_outbuf_address0 <= tmp_8_cast_fu_296_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
            row_outbuf_address0 <= grp_dct_1d2_fu_207_dst_address0;
        else 
            row_outbuf_address0 <= "XXXXXX";
        end if; 
    end process;


    row_outbuf_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, grp_dct_1d2_fu_207_dst_ce0, ap_CS_fsm_state3)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            row_outbuf_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
            row_outbuf_ce0 <= grp_dct_1d2_fu_207_dst_ce0;
        else 
            row_outbuf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    row_outbuf_we0_assign_proc : process(grp_dct_1d2_fu_207_dst_we0, ap_CS_fsm_state3)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
            row_outbuf_we0 <= grp_dct_1d2_fu_207_dst_we0;
        else 
            row_outbuf_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_10_cast_fu_327_p1 <= std_logic_vector(resize(unsigned(tmp_2_fu_321_p2),32));
    tmp_10_fu_431_p2 <= std_logic_vector(unsigned(i_3_cast1_cast_fu_428_p1) + unsigned(tmp_12_cast_fu_424_p1));
    tmp_11_fu_388_p3 <= (i_3_mid2_fu_368_p3 & ap_const_lv3_0);
    tmp_12_cast_fu_424_p1 <= std_logic_vector(resize(unsigned(tmp_6_fu_417_p3),8));
    tmp_12_fu_400_p2 <= std_logic_vector(unsigned(j_1_cast2_mid2_cast_fu_384_p1) + unsigned(tmp_15_cast_fu_396_p1));
    tmp_13_cast_fu_437_p1 <= std_logic_vector(resize(unsigned(tmp_10_fu_431_p2),32));
    tmp_15_cast_fu_396_p1 <= std_logic_vector(resize(unsigned(tmp_11_fu_388_p3),8));
    tmp_16_cast_fu_406_p1 <= std_logic_vector(resize(unsigned(tmp_12_fu_400_p2),32));
    tmp_1_fu_307_p3 <= (j_cast5_mid2_v_reg_465 & ap_const_lv3_0);
    tmp_2_fu_321_p2 <= std_logic_vector(unsigned(i_1_cast4_cast_fu_318_p1) + unsigned(tmp_4_cast_fu_314_p1));
    tmp_4_cast_fu_314_p1 <= std_logic_vector(resize(unsigned(tmp_1_fu_307_p3),8));
    tmp_4_fu_362_p2 <= "1" when (i_3_reg_196 = ap_const_lv4_8) else "0";
    tmp_5_fu_278_p3 <= (i_1_mid2_fu_258_p3 & ap_const_lv3_0);
    tmp_6_cast_fu_286_p1 <= std_logic_vector(resize(unsigned(tmp_5_fu_278_p3),8));
    tmp_6_fu_417_p3 <= (j_1_cast2_mid2_v_reg_504 & ap_const_lv3_0);
    tmp_8_cast_fu_296_p1 <= std_logic_vector(resize(unsigned(tmp_8_fu_290_p2),32));
    tmp_8_fu_290_p2 <= std_logic_vector(unsigned(j_cast5_mid2_cast_fu_274_p1) + unsigned(tmp_6_cast_fu_286_p1));
    tmp_9_fu_332_p2 <= "1" when (i_2_reg_162 = ap_const_lv4_8) else "0";
    tmp_fu_222_p2 <= "1" when (i_reg_117 = ap_const_lv4_8) else "0";
    tmp_s_fu_252_p2 <= "1" when (i_1_reg_151 = ap_const_lv4_8) else "0";
end behav;
